#include <WiFi.h>
#include <WebServer.h>

// Configurações de Wi-Fi
const char* ssid = "home2.4";
const char* password = "Home31415";

// Definições de pinos
const byte ANALOG_PIN = 15;  // Pino do microfone (GPIO15)
const byte RED_PIN = 21;     // Pino do LED RGB (vermelho)
const byte GREEN_PIN = 22;   // Pino do LED RGB (verde)
const byte BLUE_PIN = 23;    // Pino do LED RGB (azul)
const int LED_PIN = 2;       // Pino do LED adicional para controle web

// Definições de som
const word MID_SCALE = 2048; // Meio da escala para ESP32 (12 bits)
const word SND_TRIG_MIN = 650;
const word SND_TRIG_MAX = 1100;
const word SND_ALERT_INTERVAL = 5000;
const byte SND_AMPLIFICATION = 3;
const String SENSOR_ID = "QuartoNene";

// Variáveis globais
unsigned long sndStart = 0;
unsigned long sndLast = 0;
int snd = 0;
word sndLvl = 0;
bool sndFl = false;
int ledState = LOW;

WebServer server(80);

// Função para o servidor Web
void handleWebRoot() {
  String html = "<html><body>";
  html += "<h1>Controle de LED</h1>";
  html += ledState == LOW ? "<a href='/ligar'><button>Ligar LED</button></a>" : "<a href='/desligar'><button>Desligar LED</button></a>";
  html += "</body></html>";
  server.send(200, "text/html", html);
}

void handleLigar() {
  ledState = HIGH;
  digitalWrite(LED_PIN, ledState);
  server.sendHeader("Location", "/", true);
  server.send(302, "text/plain", ""); // Redireciona
}

void handleDesligar() {
  ledState = LOW;
  digitalWrite(LED_PIN, ledState);
  server.sendHeader("Location", "/", true);
  server.send(302, "text/plain", ""); // Redireciona
}

void handleNotFound() {
  server.send(404, "text/plain", "Página não encontrada");
}

void setup() {
  Serial.begin(115200);

  // Inicializa os pinos do LED RGB e LED adicional
  pinMode(RED_PIN, OUTPUT);
  pinMode(GREEN_PIN, OUTPUT);
  pinMode(BLUE_PIN, OUTPUT);
  pinMode(LED_PIN, OUTPUT);

  digitalWrite(RED_PIN, LOW);
  digitalWrite(GREEN_PIN, LOW);
  digitalWrite(BLUE_PIN, LOW);
  digitalWrite(LED_PIN, ledState);

  // Conexão ao Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWiFi conectado - IP: " + WiFi.localIP().toString());

  // Configuração do servidor Web
  server.on("/", handleWebRoot);
  server.on("/ligar", handleLigar);
  server.on("/desligar", handleDesligar);
  server.onNotFound(handleNotFound);
  server.begin();
  Serial.println("Servidor web iniciado");
}

void loop() {
  server.handleClient();

  // Processamento de som
  snd = MID_SCALE - analogRead(ANALOG_PIN);
  snd = abs(snd) * SND_AMPLIFICATION;
  if (snd > MID_SCALE * 2 - 1) {
    snd = MID_SCALE * 2 - 1;
  }
  sndLvl = (sndLvl * 9 + snd) / 10;

  if (sndLvl > SND_TRIG_MAX) {
    if (!sndFl) {
      sndStart = millis();
      sndFl = true;
      digitalWrite(BLUE_PIN, HIGH); // LED RGB Azul ligado
    }
    if (sndFl && (millis() - sndLast) > SND_ALERT_INTERVAL) {
      Serial.println("Alerta enviado: " + SENSOR_ID + " | Duração: " + String((millis() - sndStart) / 1000) + " seg | Nível de som: " + String(sndLvl));
      sndLast = millis();
    }
  } else if (sndLvl < SND_TRIG_MIN) {
    sndFl = false;
    digitalWrite(BLUE_PIN, LOW); // LED RGB Azul desligado
  }

  delay(10);
}
